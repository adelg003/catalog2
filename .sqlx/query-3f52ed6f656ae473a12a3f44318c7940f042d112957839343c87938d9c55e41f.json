{
  "db_name": "PostgreSQL",
  "query": "\n        -- Pull Edges link to selected node\n        WITH RECURSIVE\n            -- Data with all parent / child relationships\n            data AS (\n                -- Model Dependencies\n                SELECT\n                    'pack' AS source_type,\n                    md.pack_id AS source_id,\n                    'model' AS dest_type,\n                    md.model_id AS dest_id\n                FROM\n                    model_dependency md\n                UNION ALL\n                -- Pack Dependencies\n                SELECT\n                    'model' AS source_type,\n                    pd.model_id AS source_id,\n                    'pack' AS dest_type,\n                    pd.pack_id AS dest_id\n                FROM\n                    pack_dependency pd\n            ),\n            -- Trace parent relationships to source parent\n            parent AS (\n                SELECT\n                    source_type,\n                    source_id,\n                    1 AS source_distance,\n                    dest_type,\n                    dest_id,\n                    0 AS dest_distance\n                FROM\n                    data\n                WHERE\n                    dest_type = $1 -- type param\n                    AND dest_id = $2 -- id param\n                    AND 1 <= $3 -- parent distance param\n                UNION ALL\n                SELECT\n                    d.source_type,\n                    d.source_id,\n                    p.source_distance + 1 AS source_distance,\n                    d.dest_type,\n                    d.dest_id,\n                    p.dest_distance + 1 AS dest_distance\n                FROM\n                    data d\n                INNER JOIN\n                    parent p\n                ON\n                    d.dest_type = p.source_type\n                    AND d.dest_id = p.source_id\n                WHERE\n                    p.source_distance + 1 <= $3 -- parent distance param\n            ),\n            -- Trace child relationships to final child\n            child AS (\n                SELECT\n                    source_type,\n                    source_id,\n                    0 AS source_distance,\n                    dest_type,\n                    dest_id,\n                    -1 AS dest_distance\n                FROM\n                    data\n                WHERE\n                    source_type = $1 -- type param\n                    AND source_id = $2 -- id param\n                    AND ABS(-1) <= $4 -- child distance param\n                UNION ALL\n                SELECT\n                    d.source_type,\n                    d.source_id,\n                    c.source_distance - 1 AS source_distance,\n                    d.dest_type,\n                    d.dest_id,\n                    c.dest_distance - 1 AS dest_distance\n                FROM\n                    data d\n                INNER JOIN\n                    child c\n                ON\n                    d.source_type = c.dest_type\n                    AND d.source_id = c.dest_id\n                WHERE\n                    ABS(c.dest_distance - 1) <= $4 -- child distance param\n            ),\n            -- Trace parent AND child relationships to source node AND final child\n            edges AS (\n                SELECT\n                    source_type,\n                    source_id,\n                    source_distance,\n                    dest_type,\n                    dest_id,\n                    dest_distance\n                FROM\n                    parent\n                UNION ALL\n                SELECT\n                    source_type,\n                    source_id,\n                    source_distance,\n                    dest_type,\n                    dest_id,\n                    dest_distance\n                FROM\n                    child\n            ),\n            -- Lets expose some use full details to describe the node\n            details AS (\n                SELECT\n                    'model' AS type,\n                    id,\n                    name\n                FROM\n                    model\n                UNION ALL\n                SELECT\n                    'pack' AS type,\n                    id,\n                    name\n                FROM\n                    pack\n            )\n        -- Now we can finally select what we want\n        SELECT\n            edges.source_type AS \"source_type!: DependencyType\",\n            edges.source_id,\n            source.name AS source_name,\n            edges.dest_type AS \"dest_type!: DependencyType\",\n            edges.dest_id,\n            dest.name AS dest_name\n        FROM\n            edges\n        LEFT JOIN\n            details source\n        ON\n            source.type = edges.source_type\n            AND source.id = edges.source_id\n        LEFT JOIN\n            details dest\n        ON\n            dest.type = edges.dest_type\n            AND dest.id = edges.dest_id\n        ",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "source_type!: DependencyType",
        "type_info": "Text"
      },
      {
        "ordinal": 1,
        "name": "source_id",
        "type_info": "Int4"
      },
      {
        "ordinal": 2,
        "name": "source_name",
        "type_info": "Text"
      },
      {
        "ordinal": 3,
        "name": "dest_type!: DependencyType",
        "type_info": "Text"
      },
      {
        "ordinal": 4,
        "name": "dest_id",
        "type_info": "Int4"
      },
      {
        "ordinal": 5,
        "name": "dest_name",
        "type_info": "Text"
      }
    ],
    "parameters": {
      "Left": [
        "Text",
        "Int4",
        "Int4",
        "Int4"
      ]
    },
    "nullable": [
      true,
      true,
      true,
      true,
      true,
      null
    ]
  },
  "hash": "3f52ed6f656ae473a12a3f44318c7940f042d112957839343c87938d9c55e41f"
}
